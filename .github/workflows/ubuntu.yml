name: Build Linux Binaries

on:
  push:
  schedule:
  - cron: "0 */12 * * *"
  workflow_dispatch:
env:
  REGISTRY: ghcr.io

jobs:
  Depscan-Linux-Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Checkout dep-scan
      uses: actions/checkout@v3
      with:
        repository: AppThreat/dep-scan
        path: dep-scan
    - name: Checkout cdxgen
      uses: actions/checkout@v3
      with:
        repository: AppThreat/cdxgen
        path: cdxgen
    - name: Checkout cdxgen
      uses: actions/checkout@v3
      with:
        repository: ngcloudsec/cdxgen-plugins-bin
        path: cdxgen-plugins-bin
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - uses: actions/setup-go@v3
      with:
        go-version: '^1.19.1'
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Install pyinstaller
      run: |
        python3 -m pip install twine setuptools wheel pyinstaller
        cd dep-scan
        pip3 install -r requirements.txt
        wget https://github.com/upx/upx/releases/download/v4.0.1/upx-4.0.1-amd64_linux.tar.xz
        tar -xvf upx-4.0.1-amd64_linux.tar.xz
        chmod +x upx-4.0.1-amd64_linux/upx
        sudo cp upx-4.0.1-amd64_linux/upx /usr/local/bin/
    - name: Produce cdxgen pkg
      run: |
        sudo npm install -g pkg
        cd cdxgen
        npm install
        pkg -t node18-linux --public package.json --out-path dist
        chmod +x dist/cdxgen
        ./dist/cdxgen --version
    - name: Build cdxgen plugins
      run: |
        cd cdxgen-plugins-bin
        bash build-linux.sh
    - name: Binary amd64 build
      run: |
        cd dep-scan
        pyinstaller depscan/cli.py --noconfirm --log-level=WARN --nowindow --onefile --name depscan-linux-amd64 --add-data="vendor:vendor" --add-binary="../cdxgen/dist/cdxgen:local_bin" --add-binary="../cdxgen-plugins-bin/plugins/osquery/osqueryi-linux-amd64:local_bin/osquery" --add-binary="../cdxgen-plugins-bin/plugins/goversion/goversion-linux-amd64:local_bin/goversion" --add-binary="../cdxgen-plugins-bin/plugins/trivy/trivy-cdxgen-linux-amd64:local_bin/trivy" --add-binary="../cdxgen-plugins-bin/plugins/cargo-auditable/cargo-auditable-cdxgen-linux-amd64:local_bin/cargo-auditable" --collect-submodules depscan --noupx
        sha256sum ./dist/depscan-linux-amd64 > ./dist/depscan-linux-amd64.sha256
        ./dist/depscan-linux-amd64 --help
        ./dist/depscan-linux-amd64 -i . -o /tmp/depscan.json
    - name: BLint
      run: |
        pip3 install blint
        blint -i dep-scan/dist -o /tmp/reports
      env:
        PYTHONIOENCODING: utf-8
        LANG: en_US.utf-8
    - name: Install oras
      run: |
        curl -LO https://github.com/oras-project/oras/releases/download/v0.16.0/oras_0.16.0_linux_amd64.tar.gz
        mkdir -p oras-install/
        tar -zxf oras_0.16.0_*.tar.gz -C oras-install/
        mv oras-install/oras /usr/local/bin/
        rm -rf oras_0.16.0_*.tar.gz oras-install/
        oras version
    - name: Upload dep-scan
      run: |
        cd ./dep-scan/dist
        echo $GITHUB_TOKEN | oras login ghcr.io -u $GITHUB_USERNAME --password-stdin
        oras push ghcr.io/ngcloudsec/depscan:v3 \
          --config ../config.json:application/vnd.oras.config.v1+json \
          --annotation-file ../annotations.json \
          ./depscan-linux-amd64:application/vnd.ngcloudsec.depscan.layer.v1+tar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USERNAME: ${{ github.actor }}
    - uses: actions/upload-artifact@v1
      if: startsWith(github.ref, 'refs/tags/') != true
      with:
        path: ./dep-scan/dist
        name: depscan-linux-amd64
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          dep-scan/dist/depscan-linux-amd64
          dep-scan/dist/depscan-linux-amd64.sha256
